# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
on:
  push:

name: R-CMD-check

permissions:
  actions: write
  contents: read

jobs:
  R-CMD-check:
    runs-on: macos-latest
    name: macOS (R-devel, clang 16)

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      CC: /usr/local/opt/llvm@16/bin/clang
      CXX: /usr/local/opt/llvm@16/bin/clang++
      LDFLAGS: "-L/usr/local/opt/llvm@16/lib -Wl,-rpath,/usr/local/opt/llvm@16/lib"
      CPPFLAGS: "-I/usr/local/opt/llvm@16/include"
      CFLAGS: "-O2 -I/usr/local/opt/llvm@16/include"
      CXXFLAGS: "-O2 -I/usr/local/opt/llvm@16/include"
      PATH: "/usr/local/opt/llvm@16/bin:$PATH"
      MAKE: make -j2

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          brew update
          brew install gcc
          brew install llvm@16
          brew link --force llvm@16
          brew install automake
          brew install fribidi
          brew install gettext
          brew install pcre2
          brew install xz
          brew install libgit2
          brew install udunits
          brew install cairo
          brew install pkg-config
          brew install tcl-tk
          brew install jpeg
          brew install libpng
          brew install libtiff
          xcode-select --install || true

      - name: Configure clang 16
        run: |
          echo "CC=/usr/local/opt/llvm@16/bin/clang" >> $GITHUB_ENV
          echo "CXX=/usr/local/opt/llvm@16/bin/clang++" >> $GITHUB_ENV
          echo "LDFLAGS=-L/usr/local/opt/llvm@16/lib -Wl,-rpath,/usr/local/opt/llvm@16/lib" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/usr/local/opt/llvm@16/include" >> $GITHUB_ENV
          echo "/usr/local/opt/llvm@16/bin" >> $GITHUB_PATH

      - name: Download and compile R-devel
        run: |
          curl -O https://stat.ethz.ch/R/daily/R-devel.tar.gz
          tar -xzf R-devel.tar.gz
          mkdir r-devel-build
          cd r-devel-build
          # Set permissions for the runner user
          sudo chown -R $(whoami) .
          ../R-devel/configure --enable-R-shlib --enable-memory-profiling --with-cairo --with-jpeglib --with-readline --with-tcltk --with-recommended-packages --enable-RGBA CC=/usr/local/opt/llvm@16/bin/clang CXX=/usr/local/opt/llvm@16/bin/clang++
          make
          sudo make install

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Install package dependencies
        run: |
          R -e 'install.packages("remotes")'
          R -e 'remotes::install_deps(dependencies = TRUE)'
          R -e 'install.packages("rcmdcheck")'

      - name: Check package
        run: |
          R -e 'rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")'

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r-devel-results
          path: check
